import React, { useState, useEffect } from 'react';
import { Search, MapPin, Calendar, User, BookOpen, TrendingUp, Bell, ChevronRight, Award, Building, Clock, Filter, X, Check, AlertCircle, Sparkles, GraduationCap, Briefcase, Target, Users, BarChart3, PieChart, Activity } from 'lucide-react';
import { LineChart, Line, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis, Radar } from 'recharts';

interface College {
  id: number;
  name: string;
  location: string;
  distance: number;
  programs: string[];
  cutoff: string;
  facilities: string[];
  medium: string;
}

interface CareerPath {
  degree: string;
  industries: string[];
  govtExams: string[];
  privateJobs: string[];
  higherEd: string[];
}

interface Timeline {
  id: number;
  title: string;
  date: string;
  type: 'admission' | 'scholarship' | 'exam' | 'counseling';
  description: string;
}

interface QuizQuestion {
  id: number;
  question: string;
  options: string[];
}

const CareerAdvisorPlatform: React.FC = () => {
  const [activeTab, setActiveTab] = useState('dashboard');
  const [quizStep, setQuizStep] = useState(0);
  const [quizAnswers, setQuizAnswers] = useState<number[]>([]);
  const [searchQuery, setSearchQuery] = useState('');
  const [selectedStream, setSelectedStream] = useState('all');
  const [showFilters, setShowFilters] = useState(false);
  const [userProfile, setUserProfile] = useState({
    name: 'Student',
    class: '12th',
    interests: ['Technology', 'Science'],
    aptitudeScore: 0
  });

  const quizQuestions: QuizQuestion[] = [
    {
      id: 1,
      question: "What type of activities do you enjoy most?",
      options: ["Problem-solving and analysis", "Creative expression", "Helping others", "Business and management"]
    },
    {
      id: 2,
      question: "Which subject interests you the most?",
      options: ["Mathematics & Science", "Literature & Arts", "Social Studies", "Commerce & Economics"]
    },
    {
      id: 3,
      question: "What's your preferred work environment?",
      options: ["Laboratory/Research", "Creative Studio", "Community Service", "Corporate Office"]
    },
    {
      id: 4,
      question: "How do you approach challenges?",
      options: ["Logical analysis", "Creative thinking", "Collaborative approach", "Strategic planning"]
    },
    {
      id: 5,
      question: "What motivates you most?",
      options: ["Discovery & Innovation", "Self-expression", "Social impact", "Financial success"]
    }
  ];

  const colleges: College[] = [
    {
      id: 1,
      name: "Government Science College",
      location: "City Center",
      distance: 5,
      programs: ["B.Sc Physics", "B.Sc Chemistry", "B.Sc Mathematics"],
      cutoff: "85%",
      facilities: ["Hostel", "Lab", "Library", "WiFi"],
      medium: "English"
    },
    {
      id: 2,
      name: "Government Arts College",
      location: "North District",
      distance: 12,
      programs: ["B.A. English", "B.A. History", "B.A. Psychology"],
      cutoff: "75%",
      facilities: ["Library", "Auditorium", "Sports"],
      medium: "English/Hindi"
    },
    {
      id: 3,
      name: "Government Commerce College",
      location: "Business District",
      distance: 8,
      programs: ["B.Com", "BBA", "B.Com (Hons)"],
      cutoff: "80%",
      facilities: ["Computer Lab", "Library", "Seminar Hall"],
      medium: "English"
    },
    {
      id: 4,
      name: "Government Polytechnic",
      location: "Industrial Area",
      distance: 15,
      programs: ["Diploma in Engineering", "Diploma in IT"],
      cutoff: "70%",
      facilities: ["Workshop", "Lab", "Hostel"],
      medium: "English/Regional"
    }
  ];

  const careerPaths: CareerPath[] = [
    {
      degree: "B.Sc (Science)",
      industries: ["Research", "Healthcare", "Technology", "Education"],
      govtExams: ["UPSC", "SSC CGL", "Railways", "Banking"],
      privateJobs: ["Data Analyst", "Research Scientist", "Lab Technician"],
      higherEd: ["M.Sc", "MBA", "M.Tech", "PhD"]
    },
    {
      degree: "B.A (Arts)",
      industries: ["Media", "Education", "Civil Services", "Creative Arts"],
      govtExams: ["UPSC", "State PSC", "SSC", "Teaching"],
      privateJobs: ["Content Writer", "HR Manager", "Journalist"],
      higherEd: ["M.A", "MBA", "LLB", "M.Phil"]
    },
    {
      degree: "B.Com (Commerce)",
      industries: ["Banking", "Finance", "Accounting", "Business"],
      govtExams: ["Banking", "Insurance", "SSC CGL", "Audit"],
      privateJobs: ["Accountant", "Financial Analyst", "Tax Consultant"],
      higherEd: ["M.Com", "MBA", "CA", "CFA"]
    }
  ];

  const timelines: Timeline[] = [
    {
      id: 1,
      title: "Engineering Entrance Exam Registration",
      date: "2024-03-15",
      type: "exam",
      description: "Last date to register for state engineering entrance exam"
    },
    {
      id: 2,
      title: "Merit Scholarship Application",
      date: "2024-03-20",
      type: "scholarship",
      description: "Apply for government merit-based scholarships"
    },
    {
      id: 3,
      title: "College Admission Opens",
      date: "2024-04-01",
      type: "admission",
      description: "Government college admissions for undergraduate programs"
    },
    {
      id: 4,
      title: "Counseling Session",
      date: "2024-04-10",
      type: "counseling",
      description: "Career counseling for stream selection"
    }
  ];

  const aptitudeData = [
    { subject: 'Analytical', score: 85 },
    { subject: 'Creative', score: 70 },
    { subject: 'Communication', score: 75 },
    { subject: 'Technical', score: 90 },
    { subject: 'Leadership', score: 65 },
    { subject: 'Problem Solving', score: 88 }
  ];

  const handleQuizAnswer = (answerIndex: number) => {
    const newAnswers = [...quizAnswers, answerIndex];
    setQuizAnswers(newAnswers);
    
    if (quizStep < quizQuestions.length - 1) {
      setQuizStep(quizStep + 1);
    } else {
      const score = newAnswers.reduce((acc, curr) => acc + (curr + 1) * 20, 0) / newAnswers.length;
      setUserProfile({ ...userProfile, aptitudeScore: Math.round(score) });
      setActiveTab('results');
    }
  };

  const resetQuiz = () => {
    setQuizStep(0);
    setQuizAnswers([]);
    setActiveTab('aptitude');
  };

  const filteredColleges = colleges.filter(college => {
    const matchesSearch = college.name.toLowerCase().includes(searchQuery.toLowerCase()) ||
                         college.programs.some(p => p.toLowerCase().includes(searchQuery.toLowerCase()));
    const matchesStream = selectedStream === 'all' || 
                         (selectedStream === 'science' && college.programs.some(p => p.includes('B.Sc'))) ||
                         (selectedStream === 'arts' && college.programs.some(p => p.includes('B.A'))) ||
                         (selectedStream === 'commerce' && college.programs.some(p => p.includes('B.Com') || p.includes('BBA')));
    return matchesSearch && matchesStream;
  });

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-green-50">
      {/* Header */}
      <header className="bg-white shadow-lg border-b border-gray-200">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center py-4">
            <div className="flex items-center space-x-3">
              <GraduationCap className="h-8 w-8 text-blue-600" />
              <div>
                <h1 className="text-2xl font-bold text-gray-900">CareerCompass</h1>
                <p className="text-sm text-gray-600">Your Personalized Education & Career Advisor</p>
              </div>
            </div>
            <div className="flex items-center space-x-4">
              <button className="relative p-2 rounded-lg hover:bg-gray-100 transition-colors">
                <Bell className="h-5 w-5 text-gray-600" />
                <span className="absolute top-1 right-1 h-2 w-2 bg-red-500 rounded-full"></span>
              </button>
              <div className="flex items-center space-x-2 bg-gray-100 rounded-lg px-3 py-2">
                <User className="h-5 w-5 text-gray-600" />
                <span className="text-sm font-medium text-gray-700">{userProfile.name}</span>
              </div>
            </div>
          </div>
        </div>
      </header>

      {/* Navigation */}
      <nav className="bg-white shadow-sm sticky top-0 z-40">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex space-x-8 overflow-x-auto py-3">
            {[
              { id: 'dashboard', label: 'Dashboard', icon: BarChart3 },
              { id: 'aptitude', label: 'Aptitude Test', icon: Target },
              { id: 'courses', label: 'Course Mapping', icon: BookOpen },
              { id: 'colleges', label: 'Find Colleges', icon: Building },
              { id: 'timeline', label: 'Timeline', icon: Calendar },
              { id: 'profile', label: 'My Profile', icon: User }
            ].map(tab => (
              <button
                key={tab.id}
                onClick={() => setActiveTab(tab.id)}
                className={`flex items-center space-x-2 px-3 py-2 rounded-lg transition-colors whitespace-nowrap ${
                  activeTab === tab.id
                    ? 'bg-blue-100 text-blue-700'
                    : 'text-gray-600 hover:bg-gray-100'
                }`}
              >
                <tab.icon className="h-4 w-4" />
                <span className="font-medium">{tab.label}</span>
              </button>
            ))}
          </div>
        </div>
      </nav>

      {/* Main Content */}
      <main className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {/* Dashboard */}
        {activeTab === 'dashboard' && (
          <div className="space-y-6">
            <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
              <div className="bg-white rounded-xl shadow-md p-6">
                <div className="flex items-center justify-between mb-4">
                  <h3 className="text-lg font-semibold text-gray-800">Aptitude Score</h3>
                  <Activity className="h-5 w-5 text-blue-600" />
                </div>
                <div className="text-3xl font-bold text-blue-600">{userProfile.aptitudeScore || '--'}%</div>
                <p className="text-sm text-gray-600 mt-2">Based on your latest assessment</p>
              </div>
              
              <div className="bg-white rounded-xl shadow-md p-6">
                <div className="flex items-center justify-between mb-4">
                  <h3 className="text-lg font-semibold text-gray-800">Recommended Stream</h3>
                  <Sparkles className="h-5 w-5 text-green-600" />
                </div>
                <div className="text-2xl font-bold text-green-600">Science</div>
                <p className="text-sm text-gray-600 mt-2">Best match for your profile</p>
              </div>
              
              <div className="bg-white rounded-xl shadow-md p-6">
                <div className="flex items-center justify-between mb-4">
                  <h3 className="text-lg font-semibold text-gray-800">Upcoming Deadlines</h3>
                  <Clock className="h-5 w-5 text-orange-600" />
                </div>
                <div className="text-3xl font-bold text-orange-600">3</div>
                <p className="text-sm text-gray-600 mt-2">Important dates this month</p>
              </div>
            </div>

            <div className="bg-white rounded-xl shadow-md p-6">
              <h3 className="text-lg font-semibold text-gray-800 mb-4">Your Aptitude Analysis</h3>
              <ResponsiveContainer width="100%" height={300}>
                <RadarChart data={aptitudeData}>
                  <PolarGrid />
                  <PolarAngleAxis dataKey="subject" />
                  <PolarRadiusAxis angle={90} domain={[0, 100]} />
                  <Radar name="Your Score" dataKey="score" stroke="#3B82F6" fill="#3B82F6" fillOpacity={0.6} />
                </RadarChart>
              </ResponsiveContainer>
            </div>

            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div className="bg-white rounded-xl shadow-md p-6">
                <h3 className="text-xl font-semibold text-gray-800 mb-4">AI Recommendations</h3>
                <div className="space-y-3">
                  <div className="flex items-start space-x-3">
                    <Check className="h-5 w-5 text-green-500 mt-1" />
                    <div>
                      <p className="font-medium text-gray-800">B.Sc in Computer Science</p>
                      <p className="text-sm text-gray-600">95% match with your profile</p>
                    </div>
                  </div>
                  <div className="flex items-start space-x-3">
                    <Check className="h-5 w-5 text-green-500 mt-1" />
                    <div>
                      <p className="font-medium text-gray-800">Engineering (IT/CS)</p>
                      <p className="text-sm text-gray-600">90% match with your profile</p>
                    </div>
                  </div>
                  <div className="flex items-start space-x-3">
                    <Check className="h-5 w-5 text-green-500 mt-1" />
                    <div>
                      <p className="font-medium text-gray-800">BCA - Computer Applications</p>
                      <p className="text-sm text-gray-600">85% match with your profile</p>
                    </div>
                  </div>
                </div>
              </div>

              <div className="bg-white rounded-xl shadow-md p-6">
                <h3 className="text-xl font-semibold text-gray-800 mb-4">Nearby Colleges</h3>
                <div className="space-y-3">
                  {colleges.slice(0, 3).map(college => (
                    <div key={college.id} className="flex items-start space-x-3">
                      <MapPin className="h-5 w-5 text-blue-500 mt-1" />
                      <div>
                        <p className="font-medium text-gray-800">{college.name}</p>
                        <p className="text-sm text-gray-600">{college.distance} km away • {college.cutoff} cutoff</p>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            </div>
          </div>
        )}

        {/* Aptitude Test */}
        {activeTab === 'aptitude' && (
          <div className="max-w-3xl mx-auto">
            <div className="bg-white rounded-xl shadow-md p-8">
              <div className="mb-6">
                <h2 className="text-2xl font-bold text-gray-800 mb-2">Aptitude & Interest Assessment</h2>
                <p className="text-gray-600">Answer these questions to discover your ideal career path</p>
              </div>

              <div className="mb-6">
                <div className="flex justify-between items-center mb-2">
                  <span className="text-sm text-gray-600">Question {quizStep + 1} of {quizQuestions.length}</span>
                  <span className="text-sm font-medium text-blue-600">{Math.round(((quizStep + 1) / quizQuestions.length) * 100)}% Complete</span>
                </div>
                <div className="w-full bg-gray-200 rounded-full h-2">
                  <div
                    className="bg-blue-600 h-2 rounded-full transition-all duration-300"
                    style={{ width: `${((quizStep + 1) / quizQuestions.length) * 100}%` }}
                  ></div>
                </div>
              </div>

              <div className="mb-8">
                <h3 className="text-xl font-semibold text-gray-800 mb-6">
                  {quizQuestions[quizStep].question}
                </h3>
                <div className="space-y-3">
                  {quizQuestions[quizStep].options.map((option, index) => (
                    <button
                      key={index}
                      onClick={() => handleQuizAnswer(index)}
                      className="w-full text-left p-4 rounded-lg border-2 border-gray-200 hover:border-blue-400 hover:bg-blue-50 transition-all duration-200"
                    >
                      <span className="font-medium text-gray-700">{option}</span>
                    </button>
                  ))}
                </div>
              </div>

              {quizStep > 0 && (
                <button
                  onClick={() => setQuizStep(quizStep - 1)}
                  className="text-blue-600 hover:text-blue-700 font-medium"
                >
                  ← Previous Question
                </button>
              )}
            </div>
          </div>
        )}

        {/* Quiz Results */}
        {activeTab === 'results' && (
          <div className="max-w-4xl mx-auto">
            <div className="bg-white rounded-xl shadow-md p-8">
              <div className="text-center mb-8">
                <Award className="h-16 w-16 text-yellow-500 mx-auto mb-4" />
                <h2 className="text-3xl font-bold text-gray-800 mb-2">Assessment Complete!</h2>
                <p className="text-lg text-gray-600">Your aptitude score: <span className="font-bold text-blue-600">{userProfile.aptitudeScore}%</span></p>
              </div>

              <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
                <div className="bg-blue-50 rounded-lg p-6">
                  <h3 className="text-lg font-semibold text-gray-800 mb-3">Recommended Streams</h3>
                  <ul className="space-y-2">
                    <li className="flex items-center space-x-2">
                      <Check className="h-5 w-5 text-green-500" />
                      <span>Science (PCM/PCB)</span>
                    </li>
                    <li className="flex items-center space-x-2">
                      <Check className="h-5 w-5 text-green-500" />
                      <span>Technology & Engineering</span>
                    </li>
                    <li className="flex items-center space-x-2">
                      <Check className="h-5 w-5 text-green-500" />
                      <span>Computer Applications</span>
                    </li>
                  </ul>
                </div>

                <div className="bg-green-50 rounded-lg p-6">
                  <h3 className="text-lg font-semibold text-gray-800 mb-3">Career Prospects</h3>
                  <ul className="space-y-2">
                    <li className="flex items-center space-x-2">
                      <Briefcase className="h-5 w-5 text-blue-500" />
                      <span>Software Developer</span>
                    </li>
                    <li className="flex items-center space-x-2">
                      <Briefcase className="h-5 w-5 text-blue-500" />
                      <span>Data Scientist</span>
                    </li>
                    <li className="flex items-center space-x-2">
                      <Briefcase className="h-5 w-5 text-blue-500" />
                      <span>Research Analyst</span>
                    </li>
                  </ul>
                </div>
              </div>

              <div className="flex justify-center space-x-4">
                <button
                  onClick={resetQuiz}
                  className="px-6 py-3 bg-gray-200 text-gray-700 rounded-lg hover:bg-gray-300 transition-colors font-medium"
                >
                  Retake Assessment
                </button>
                <button
                  onClick={() => setActiveTab('courses')}
                  className="px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors font-medium"
                >
                  Explore Courses →
                </button>
              </div>
            </div>
          </div>
        )}

        {/* Course Mapping */}
        {activeTab === 'courses' && (
          <div className="space-y-6">
            <div className="bg-white rounded-xl shadow-md p-6">
              <h2 className="text-2xl font-bold text-gray-800 mb-6">Course to Career Path Mapping</h2>
              <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                {careerPaths.map((path, index) => (
                  <div key={index} className="border-2 border-gray-200 rounded-lg p-6 hover:border-blue-400 transition-colors">
                    <div className="flex items-center justify-between mb-4">
                      <h3 className="text-lg font-bold text-gray-800">{path.degree}</h3>
                      <GraduationCap className="h-6 w-6 text-blue-600" />
                    </div>
                    
                    <div className="space-y-4">
                      <div>
                        <h4 className="text-sm font-semibold text-gray-600 mb-2">Industries</h4>
                        <div className="flex flex-wrap gap-2">
                          {path.industries.map((industry, i) => (
                            <span key={i} className="px-2 py-1 bg-blue-100 text-blue-700 rounded text-xs">
                              {industry}
                            </span>
                          ))}
                        </div>
                      </div>
                      
                      <div>
                        <h4 className="text-sm font-semibold text-gray-600 mb-2">Government Exams</h4>
                        <div className="flex flex-wrap gap-2">
                          {path.govtExams.map((exam, i) => (
                            <span key={i} className="px-2 py-1 bg-green-100 text-green-700 rounded text-xs">
                              {exam}
                            </span>
                          ))}
                        </div>
                      </div>
                      
                      <div>
                        <h4 className="text-sm font-semibold text-gray-600 mb-2">Private Jobs</h4>
                        <ul className="text-sm text-gray-600 space-y-1">
                          {path.privateJobs.map((job, i) => (
                            <li key={i} className="flex items-center space-x-1">
                              <ChevronRight className="h-3 w-3" />
                              <span>{job}</span>
                            </li>
                          ))}
                        </ul>
                      </div>
                      
                      <div>
                        <h4 className="text-sm font-semibold text-gray-600 mb-2">Higher Education</h4>
                        <div className="flex flex-wrap gap-2">
                          {path.higherEd.map((edu, i) => (
                            <span key={i} className="px-2 py-1 bg-purple-100 text-purple-700 rounded text-xs">
                              {edu}
                            </span>
                          ))}
                        </div>
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            </div>

            <div className="bg-white rounded-xl shadow-md p-6">
              <h3 className="text-xl font-bold text-gray-800 mb-4">Career Growth Projection</h3>
              <ResponsiveContainer width="100%" height={300}>
                <LineChart data={[
                  { year: 'Year 1', science: 35000, arts: 28000, commerce: 32000 },
                  { year: 'Year 3', science: 55000, arts: 42000, commerce: 48000 },
                  { year: 'Year 5', science: 85000, arts: 60000, commerce: 75000 },
                  { year: 'Year 10', science: 150000, arts: 95000, commerce: 120000 }
                ]}>
                  <CartesianGrid strokeDasharray="3 3" />
                  <XAxis dataKey="year" />
                  <YAxis />
                  <Tooltip />
                  <Legend />
                  <Line type="monotone" dataKey="science" stroke="#3B82F6" name="Science" />
                  <Line type="monotone" dataKey="arts" stroke="#10B981" name="Arts" />
                  <Line type="monotone" dataKey="commerce" stroke="#F59E0B" name="Commerce" />
                </LineChart>
              </ResponsiveContainer>
              <p className="text-sm text-gray-600 mt-4 text-center">Average monthly salary progression (in ₹)</p>
            </div>
          </div>
        )}

        {/* Find Colleges */}
        {activeTab === 'colleges' && (
          <div className="space-y-6">
            <div className="bg-white rounded-xl shadow-md p-6">
              <div className="flex flex-col md:flex-row justify-between items-start md:items-center mb-6 space-y-4 md:space-y-0">
                <h2 className="text-2xl font-bold text-gray-800">Nearby Government Colleges</h2>
                <div className="flex space-x-3">
                  <div className="relative">
                    <Search className="absolute left-3 top-3 h-5 w-5 text-gray-400" />
                    <input
                      type="text"
                      placeholder="Search colleges or programs..."
                      value={searchQuery}
                      onChange={(e) => setSearchQuery(e.target.value)}
                      className="pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                    />
                  </div>
                  <button
                    onClick={() => setShowFilters(!showFilters)}
                    className="px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors flex items-center space-x-2"
                  >
                    <Filter className="h-5 w-5" />
                    <span>Filters</span>
                  </button>
                </div>
              </div>

              {showFilters && (
                <div className="mb-6 p-4 bg-gray-50 rounded-lg">
                  <div className="flex flex-wrap gap-3">
                    <button
                      onClick={() => setSelectedStream('all')}
                      className={`px-4 py-2 rounded-lg transition-colors ${
                        selectedStream === 'all' ? 'bg-blue-600 text-white' : 'bg-white text-gray-700'
                      }`}
                    >
                      All Streams
                    </button>
                    <button
                      onClick={() => setSelectedStream('science')}
                      className={`px-4 py-2 rounded-lg transition-colors ${
                        selectedStream === 'science' ? 'bg-blue-600 text-white' : 'bg-white text-gray-700'
                      }`}
                    >
                      Science
                    </button>
                    <button
                      onClick={() => setSelectedStream('arts')}
                      className={`px-4 py-2 rounded-lg transition-colors ${
                        selectedStream === 'arts' ? 'bg-blue-600 text-white' : 'bg-white text-gray-700'
                      }`}
                    >
                      Arts
                    </button>
                    <button
                      onClick={() => setSelectedStream('commerce')}
                      className={`px-4 py-2 rounded-lg transition-colors ${
                        selectedStream === 'commerce' ? 'bg-blue-600 text-white' : 'bg-white text-gray-700'
                      }`}
                    >
                      Commerce
                    </button>
                  </div>
                </div>
              )}

              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                {filteredColleges.map(college => (
                  <div key={college.id} className="border border-gray-200 rounded-lg p-6 hover:shadow-lg transition-shadow">
                    <div className="flex justify-between items-start mb-4">
                      <div>
                        <h3 className="text-lg font-bold text-gray-800">{college.name}</h3>
                        <div className="flex items-center space-x-2 text-sm text-gray-600 mt-1">
                          <MapPin className="h-4 w-4" />
                          <span>{college.location} • {college.distance} km away</span>
                        </div>
                      </div>
                      <span className="px-3 py-1 bg-blue-100 text-blue-700 rounded-full text-sm font-medium">
                        {college.cutoff}
                      </span>
                    </div>

                    <div className="mb-4">
                      <h4 className="text-sm font-semibold text-gray-600 mb-2">Programs Offered</h4>
                      <div className="flex flex-wrap gap-2">
                        {college.programs.map((program, i) => (
                          <span key={i} className="px-2 py-1 bg-gray-100 text-gray-700 rounded text-xs">
                            {program}
                          </span>
                        ))}
                      </div>
                    </div>

                    <div className="mb-4">
                      <h4 className="text-sm font-semibold text-gray-600 mb-2">Facilities</h4>
                      <div className="flex flex-wrap gap-2">
                        {college.facilities.map((facility, i) => (
                          <span key={i} className="px-2 py-1 bg-green-100 text-green-700 rounded text-xs">
                            {facility}
                          </span>
                        ))}
                      </div>
                    </div>

                    <div className="flex justify-between items-center">
                      <span className="text-sm text-gray-600">Medium: <span className="font-medium">{college.medium}</span></span>
                      <button className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors text-sm font-medium">
                        View Details
                      </button>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>
        )}

        {/* Timeline Tracker */}
        {activeTab === 'timeline' && (
          <div className="space-y-6">
            <div className="bg-white rounded-xl shadow-md p-6">
              <h2 className="text-2xl font-bold text-gray-800 mb-6">Important Dates & Deadlines</h2>
              
              <div className="space-y-4">
                {timelines.map(timeline => (
                  <div key={timeline.id} className="flex items-start space-x-4 p-4 border border-gray-200 rounded-lg hover:shadow-md transition-shadow">
                    <div className={`p-3 rounded-lg ${
                      timeline.type === 'exam' ? 'bg-blue-100' :
                      timeline.type === 'scholarship' ? 'bg-green-100' :
                      timeline.type === 'admission' ? 'bg-purple-100' :
                      'bg-orange-100'
                    }`}>
                      {timeline.type === 'exam' && <BookOpen className="h-6 w-6 text-blue-600" />}
                      {timeline.type === 'scholarship' && <Award className="h-6 w-6 text-green-600" />}
                      {timeline.type === 'admission' && <GraduationCap className="h-6 w-6 text-purple-600" />}
                      {timeline.type === 'counseling' && <Users className="h-6 w-6 text-orange-600" />}
                    </div>
                    <div className="flex-1">
                      <div className="flex justify-between items-start">
                        <div>
                          <h3 className="font-semibold text-gray-800">{timeline.title}</h3>
                          <p className="text-sm text-gray-600 mt-1">{timeline.description}</p>
                        </div>
                        <span className="px-3 py-1 bg-gray-100 text-gray-700 rounded-full text-sm font-medium">
                          {timeline.date}
                        </span>
                      </div>
                      <div className="mt-3 flex space-x-3">
                        <button className="text-sm text-blue-600 hover:text-blue-700 font-medium">
                          Set Reminder
                        </button>
                        <button className="text-sm text-gray-600 hover:text-gray-700">
                          More Info
                        </button>
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            </div>

            <div className="bg-yellow-50 border border-yellow-200 rounded-xl p-6">
              <div className="flex items-start space-x-3">
                <AlertCircle className="h-6 w-6 text-yellow-600 mt-1" />
                <div>
                  <h3 className="font-semibold text-gray-800 mb-2">Don't Miss Out!</h3>
                  <p className="text-gray-700">Enable notifications to receive timely reminders about important admission dates, scholarship deadlines, and exam registrations.</p>
                  <button className="mt-3 px-4 py-2 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700 transition-colors font-medium">
                    Enable Notifications
                  </button>
                </div>
              </div>
            </div>
          </div>
        )}

        {/* Profile */}
        {activeTab === 'profile' && (
          <div className="max-w-3xl mx-auto">
            <div className="bg-white rounded-xl shadow-md p-8">
              <h2 className="text-2xl font-bold text-gray-800 mb-6">My Profile</h2>
              
              <div className="space-y-6">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">Full Name</label>
                  <input
                    type="text"
                    value={userProfile.name}
                    onChange={(e) => setUserProfile({...userProfile, name: e.target.value})}
                    className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                  />
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">Current Class</label>
                  <select
                    value={userProfile.class}
                    onChange={(e) => setUserProfile({...userProfile, class: e.target.value})}
                    className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                  >
                    <option value="10th">10th Standard</option>
                    <option value="11th">11th Standard</option>
                    <option value="12th">12th Standard</option>
                  </select>
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">Interests</label>
                  <div className="flex flex-wrap gap-2">
                    {['Technology', 'Science', 'Arts', 'Commerce', 'Sports', 'Literature'].map(interest => (
                      <button
                        key={interest}
                        onClick={() => {
                          const newInterests = userProfile.interests.includes(interest)
                            ? userProfile.interests.filter(i => i !== interest)
                            : [...userProfile.interests, interest];
                          setUserProfile({...userProfile, interests: newInterests});
                        }}
                        className={`px-3 py-1 rounded-full transition-colors ${
                          userProfile.interests.includes(interest)
                            ? 'bg-blue-600 text-white'
                            : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
                        }`}
                      >
                        {interest}
                      </button>
                    ))}
                  </div>
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">Aptitude Score</label>
                  <div className="flex items-center space-x-4">
                    <div className="flex-1 bg-gray-200 rounded-full h-3">
                      <div
                        className="bg-blue-600 h-3 rounded-full"
                        style={{ width: `${userProfile.aptitudeScore}%` }}
                      ></div>
                    </div>
                    <span className="font-semibold text-gray-800">{userProfile.aptitudeScore}%</span>
                  </div>
                </div>

                <div className="pt-4 border-t border-gray-200">
                  <button className="w-full px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors font-medium">
                    Save Profile
                  </button>
                </div>
              </div>
            </div>
          </div>
        )}
      </main>

      {/* Footer */}
      <footer className="bg-gray-800 text-white mt-12">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
          <div className="grid grid-cols-1 md:grid-cols-4 gap-8">
            <div>
              <h3 className="text-lg font-semibold mb-3">About CareerCompass</h3>
              <p className="text-sm text-gray-400">Empowering students with personalized career guidance and education planning.</p>
            </div>
            <div>
              <h3 className="text-lg font-semibold mb-3">Quick Links</h3>
              <ul className="space-y-2 text-sm text-gray-400">
                <li><a href="#" className="hover:text-white">Privacy Policy</a></li>
                <li><a href="#" className="hover:text-white">Terms of Service</a></li>
                <li><a href="#" className="hover:text-white">Contact Us</a></li>
              </ul>
            </div>
            <div>
              <h3 className="text-lg font-semibold mb-3">Resources</h3>
              <ul className="space-y-2 text-sm text-gray-400">
                <li><a href="#" className="hover:text-white">Career Guide</a></li>
                <li><a href="#" className="hover:text-white">Study Materials</a></li>
                <li><a href="#" className="hover:text-white">FAQ</a></li>
              </ul>
            </div>
            <div>
              <h3 className="text-lg font-semibold mb-3">Connect</h3>
              <p className="text-sm text-gray-400 mb-3">Get support and updates</p>
              <div className="flex space-x-3">
                <button className="p-2 bg-gray-700 rounded-lg hover:bg-gray-600 transition-colors">
                  <Users className="h-5 w-5" />
                </button>
                <button className="p-2 bg-gray-700 rounded-lg hover:bg-gray-600 transition-colors">
                  <Bell className="h-5 w-5" />
                </button>
              </div>
            </div>
          </div>
          <div className="mt-8 pt-8 border-t border-gray-700 text-center text-sm text-gray-400">
            <p>© 2024 CareerCompass. All rights reserved. | Government of India Initiative</p>
          </div>
        </div>
      </footer>
    </div>
  );
};

export default CareerAdvisorPlatform;
